#+SETUPFILE: ../../styles/readtheorg.setup
#+TITLE: Web

* HTTP
** Header
*** 请求

#+CAPTION: 请求方法
|       |   | 示例                     |
|-------+---+--------------------------|
| =GET= |   | =GET /pub/WWW/ HTTP/1.1= |

#+CAPTION: 请求
|              |                                                            | 示例                                    |
|--------------+------------------------------------------------------------+-----------------------------------------|
| =Host=       | 服务器域名（for virtual hosting）和服务器监听的 TCP 端口号 | =Host: www.w3.org:80=                   |
|--------------+------------------------------------------------------------+-----------------------------------------|
| =Referer=    | 包含当前请求的页面的链接的前一个页面的地址                 | =Referer: http://www.w3.org/index.html= |
|--------------+------------------------------------------------------------+-----------------------------------------|
| =Connection= | 当前连接的选项（and list of hop-by-hop request fields）    | =Connection: keep-alive=                |
|--------------+------------------------------------------------------------+-----------------------------------------|
| =Date=       | 消息发起（originate）的日期和时间                          | =Date: Tue, 15 Nov 1994 08:12:31 GMT=   |

#+CAPTION: 客户端
|              |                   | 示例                                           |
|--------------+-------------------+------------------------------------------------|
| =Cookie=     |                   | =Cookie: $Version=1; Skin=new;=                |
|--------------+-------------------+------------------------------------------------|
| =User-Agent= | User agent 字符串 | =User-Agent: CERN-LineMode/2.15 libwww/2.17b3= |

#+CAPTION: 内容
|                   |                  | 示例                                      |
|-------------------+------------------+-------------------------------------------|
| =Accept=          | 可接收的媒体类型 | =Accept: text/*, text/html, text/html=    |
|-------------------+------------------+-------------------------------------------|
| =Accept-Charset=  | 可接收的字符集   | =Accept-Charset: iso-8859-5, unicode-1-1= |
|-------------------+------------------+-------------------------------------------|
| =Accept-Encoding= | 可接收的编码类型 | =Accept-Encoding: compress, gzip=         |
|-------------------+------------------+-------------------------------------------|
| =Accept-Language= | 可接收的语言     | =Accept-Language: da, en-gb=              |

#+CAPTION: 缓存
|                     |                                                            | 示例                                       |
|---------------------+------------------------------------------------------------+--------------------------------------------|
| =Cache-Control=     | 请求-响应链（request-response chain）的缓存机制指令        | =Cache-Control: no-cache, must-revalidate= |
|---------------------+------------------------------------------------------------+--------------------------------------------|
| =If-Modified-Since= | 只有资源在执行时间之后被修改过时，才重新请求，否则使用缓存 |                                            |
|                     | 资源未被修改时返回 =304 Not Modified= 响应码               |                                            |

#+CAPTION: 安全
|                 |                                 | 示例                                |
|-----------------+---------------------------------+-------------------------------------|
| =Authorization= | HTTP 身份验证凭据（credential） | =Authorization: Basic am910jRmdW4== |

*** 响应

#+CAPTION: 响应
|            |                | 示例                                              |
|------------+----------------+---------------------------------------------------|
|            | 状态           | =HTTP/1.1 200 OK=                                 |
|------------+----------------+---------------------------------------------------|
| =Allow=    | 允许的请求方法 | =Allow: GET, HEAD, PUT=                           |
|------------+----------------+---------------------------------------------------|
| =Location= | 跳转到其他 URL | =Location: http://www.w3.org/pub/WWW/People.html= |

#+CAPTION: 服务器端
|          |                                | 示例          |
|----------+--------------------------------+---------------|
| =Server= | 服务器名（服务器端软件及版本） | =nginx/1.2.6= |

#+CAPTION: 客户端
|              |   | 示例                                                  |
|--------------+---+-------------------------------------------------------|
| =Set-Cookie= |   | =Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1= |

#+CAPTION: 内容
|                    |                  | 示例                                    |
|--------------------+------------------+-----------------------------------------|
| =Content-Length=   | 内容长度         | =Content-Length: 6044=                  |
|--------------------+------------------+-----------------------------------------|
| =Content-Type=     | 内容类型及字符集 | =Content-Type: text/html;charset=utf-8= |
|--------------------+------------------+-----------------------------------------|
| =Content-Encoding= | 内容编码         | =Content-Encoding: gzip=                |
|--------------------+------------------+-----------------------------------------|
| =Content-Language= | 内容语言         | =Content-Language: en=                  |

#+CAPTION: 缓存
|                 |                                          | 示例                                           |
|-----------------+------------------------------------------+------------------------------------------------|
| =Expires=       | 响应失效（stale）的日期时间              | =Expires: Thu, 01 Dec 1994 16:00:00 GMT=       |
|                 | 需要重新从服务器获取                     |                                                |
|-----------------+------------------------------------------+------------------------------------------------|
| =Last-Modified= |                                          | =Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT= |
|-----------------+------------------------------------------+------------------------------------------------|
| =Vary=          | 辨别不同的请求的方式，以决定是否使用缓存 | =Vary: Cookie, Accept-Encoding=                |

#+CAPTION: 安全
|                    |                              | 示例                      |
|--------------------+------------------------------+---------------------------|
| =WWW-Authenticate= | 请求的资源需要 HTTP 身份验证 | =WWW-Authenticate: Basic= |

*** Etag

Etag header 是一个资源的唯一标识符，类似于文件的校验和，缓存机制（客户端在使用本地的缓存前，询问服务器某个资源是否过期）通过比较 Etag 确定一个资源是否过期。

** 响应码

| 100 ~ 199 | 信息状态码         |
|-----------+--------------------|
| 200 ~ 299 | 成功状态码         |
|-----------+--------------------|
| 300 ~ 399 | 跳转状态码         |
|-----------+--------------------|
| 400 ~ 499 | 客户端错误状态码   |
|-----------+--------------------|
| 500 ~ 599 | 服务器端错误状态码 | 

#+CAPTION: 信息状态码
| 200 | OK       | 正常返回                   |
|-----+----------+----------------------------|
| 202 | Accepted | 请求被接受，等待服务器动作 | 

#+CAPTION: 跳转状态码
| 301 | Moved Permanently | 永久跳转 |
|-----+-------------------+----------|
| 302 | Found             | 暂时跳转 | 

#+CAPTION: 客户端错误状态码
| 401 | Unauthorized | 需要验证身份     |
|-----+--------------+------------------|
| 403 | Forbidden    | 请求被拒绝       |
|-----+--------------+------------------|
| 404 | Not Found    | 找不到请求的 URL |

#+CAPTION: 服务器端错误状态码
| 500 | Internal Server Error | 服务器内部错误，无法满足请求             |
|-----+-----------------------+------------------------------------------|
| 502 | Bad Gateway           | gateway 或代理服务器与相关服务器连接失败 |
|-----+-----------------------+------------------------------------------|
| 503 | Service Unavailable   | 服务器暂时无法满足请求                   |

* RPC

- RPC (Remote Procedure Call) :: 远程方法调用。\\
                                 采用「客户端-服务器」模式。\\
                                 通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。\\
                                 在不同操作系统、环境的程序之间，基于 Internet 的过程调用的规范和一系列的实现。

- WSDL (Web Services Description Language) :: API 定义的规格，规定了请求的种类、包含的参数、回复的内容等。

** XML-RPC

- XML-RPC :: 请求体为 XML 的 HTTP POST 请求，使用 HTTP 作为传输协议，XML 作为传送信息的编码格式。\\
             被调用的方法在服务器端执行后，将执行结果以 XML 格式编码后返回。

** SOAP

- SOAP (Simple Object Access Protocol) :: 一种用来交换基于 XML 的信息的协议。\\
                                          有严格的格式要求，回复的 XML 需要被解析。\\
                                          可以用于单向的通信，但更常用于 RPC 风格的会话。

SOAP+XML 的问题在于严格的格式要求，不适合松耦合的分布式系统。

** REST

[[https://en.wikipedia.org/wiki/Representational_state_transfer][Representational state transfer]]

- REST (Representational State Transfer) :: 一种软件架构风格，用于分布式媒体系统（万维网本身就是一个 REST 风格的系统）。\\
                                          不限定信息的格式，可以使用 XML 或 JSON。\\
                                          使用标准 URI 和方法调用 web service。\\
                                          请求的对象被称为资源，可以对其进行 GET 和 POST 等操作。

REST+JSON 的适应性更强，后端对返回格式的轻微改变不会影响到客户端的功能。因此 SOAP+XML 已经被 REST+JSON 所取代。

- RESTful web service :: 使用 HTTP 并遵循 REST 原则的 web service。
* 链接

1. [[https://www.w3.org/Protocols/rfc2616/rfc2616.html][Hypertext Transfer Protocol -- HTTP/1.1]]
1. [[https://en.wikipedia.org/wiki/List_of_HTTP_header_fields][List of HTTP header fields]]
